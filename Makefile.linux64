CC := clang
TARGET := openjkdf2-64
OBJ := build_linux64

TARGET_USE_LIBSMACKER := 1
TARGET_USE_SDL2 := 1
TARGET_POSIX := 1
TARGET_USE_OPENGL := 1
TARGET_LINUX := 1

CFLAGS := -O2 -march=native
LDFLAGS := -Wl,-Map=output-linux64.map

include sources.mk

# Flags
LDFLAGS += -lstdc++ -lm -lSDL2 -lSDL2_mixer -lGL -lGLEW -lopenal -fshort-wchar $(shell pkg-config --libs gtk+-3.0) 
CFLAGS += -D_XOPEN_SOURCE=500 -D_DEFAULT_SOURCE -I$(ROOT_DIR)/$(SRC) -I/usr/include/SDL2 -I$(ROOT_DIR)/$(SRC)/external/libsmacker -DQOL_IMPROVEMENTS -DLINUX -DPLATFORM_POSIX  -DARCH_64BIT -DOPENAL_SOUND -DSDL2_RENDER -Wuninitialized -fshort-wchar -Wall -Wno-unused-variable -Wno-parentheses -Wno-missing-braces $(shell pkg-config --cflags gtk+-3.0) 

CFLAGS += -DLINUX_TMP -DNO_JK_MMAP
LDFLAGS += -DLINUX_TMP -DNO_JK_MMAP

all: $(TARGET)
include common.mk

$(OBJ)/%.o: $(SRC)/%.c | $(OBJ) initial
	@mkdir -p $(dir $@)
	$(CC) -c -g -rdynamic -o $@ $< $(CFLAGS) -std=c11

$(OBJ)/%.o: $(SRC)/%.cpp | $(OBJ) initial
	@mkdir -p $(dir $@)
	$(CC) -c -g -rdynamic -o $@ $< $(CFLAGS) -lstdc++

$(TARGET): $(OBJECTS)
	$(CC) -o $@ -g -rdynamic $^ $(LDFLAGS)
